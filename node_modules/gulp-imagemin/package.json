{
  "name": "gulp-imagemin",
  "version": "2.3.0",
  "description": "Minify PNG, JPEG, GIF and SVG images",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "sindresorhus/gulp-imagemin"
  },
  "author": {
    "name": "Sindre Sorhus",
    "email": "sindresorhus@gmail.com",
    "url": "http://sindresorhus.com"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "scripts": {
    "test": "mocha --timeout 50000"
  },
  "files": [
    "index.js"
  ],
  "keywords": [
    "gulpplugin",
    "imagemin",
    "image",
    "img",
    "picture",
    "photo",
    "minify",
    "minifier",
    "compress",
    "png",
    "jpg",
    "jpeg",
    "gif",
    "svg"
  ],
  "dependencies": {
    "chalk": "^1.0.0",
    "gulp-util": "^3.0.0",
    "imagemin": "^3.0.0",
    "object-assign": "^3.0.0",
    "plur": "^1.0.0",
    "pretty-bytes": "^2.0.1",
    "through2-concurrent": "^1.1.0"
  },
  "devDependencies": {
    "imagemin-pngquant": "^4.1.0",
    "mocha": "*"
  },
  "readme": "# gulp-imagemin [![Build Status](https://travis-ci.org/sindresorhus/gulp-imagemin.svg?branch=master)](https://travis-ci.org/sindresorhus/gulp-imagemin)\n\n> Minify PNG, JPEG, GIF and SVG images with [imagemin](https://github.com/kevva/imagemin)\n\n*Issues with the output should be reported on the imagemin [issue tracker](https://github.com/kevva/imagemin/issues).*\n\n\n## Install\n\n```\n$ npm install --save-dev gulp-imagemin\n```\n\n## Usage\n\n```js\nvar gulp = require('gulp');\nvar imagemin = require('gulp-imagemin');\nvar pngquant = require('imagemin-pngquant');\n\ngulp.task('default', function () {\n\treturn gulp.src('src/images/*')\n\t\t.pipe(imagemin({\n\t\t\tprogressive: true,\n\t\t\tsvgoPlugins: [{removeViewBox: false}],\n\t\t\tuse: [pngquant()]\n\t\t}))\n\t\t.pipe(gulp.dest('dist/images'));\n});\n```\n\n\n## API\n\nComes bundled with the following **lossless** optimizers:\n\n- [gifsicle](https://github.com/kevva/imagemin-gifsicle) — *Compress GIF images*\n- [jpegtran](https://github.com/kevva/imagemin-jpegtran) — *Compress JPEG images*\n- [optipng](https://github.com/kevva/imagemin-optipng) — *Compress PNG images*\n- [svgo](https://github.com/kevva/imagemin-svgo) — *Compress SVG images*\n\n### imagemin(options)\n\nUnsupported files are ignored.\n\n#### options\n\nOptions are applied to the correct files.\n\n##### optimizationLevel *(png)*\n\nType: `number`  \nDefault: `3`\n\nSelect an optimization level between `0` and `7`.\n\n> The optimization level 0 enables a set of optimization operations that require minimal effort. There will be no changes to image attributes like bit depth or color type, and no recompression of existing IDAT datastreams. The optimization level 1 enables a single IDAT compression trial. The trial chosen is what. OptiPNG thinks it’s probably the most effective. The optimization levels 2 and higher enable multiple IDAT compression trials; the higher the level, the more trials.\n\nLevel and trials:\n\n1. 1 trial\n2. 8 trials\n3. 16 trials\n4. 24 trials\n5. 48 trials\n6. 120 trials\n7. 240 trials\n\n##### progressive *(jpg)*\n\nType: `boolean`  \nDefault: `false`\n\nLossless conversion to progressive.\n\n##### interlaced *(gif)*\n\nType: `boolean`  \nDefault: `false`\n\nInterlace gif for progressive rendering.\n\n##### multipass *(svg)*\n\nType: `boolean`  \nDefault: `false`\n\nOptimize svg multiple times until it's fully optimized.\n\n##### svgoPlugins *(svg)*\n\nType: `array`  \nDefault: `[]`\n\nCustomize which SVGO plugins to use. [More here](https://github.com/sindresorhus/grunt-svgmin#available-optionsplugins).\n\n##### use\n\nType: `array`  \nDefault: `null`\n\nAdditional [plugins](https://www.npmjs.com/browse/keyword/imageminplugin) to use with imagemin.\n\n\n## License\n\nMIT © [Sindre Sorhus](http://sindresorhus.com)\n",
  "readmeFilename": "readme.md",
  "_id": "gulp-imagemin@2.3.0",
  "dist": {
    "shasum": "b8b1ad4f5c99e31f87d87ff6d102e8b2907345e3"
  },
  "_from": "gulp-imagemin@^2.1.0",
  "_resolved": "https://registry.npmjs.org/gulp-imagemin/-/gulp-imagemin-2.3.0.tgz"
}
